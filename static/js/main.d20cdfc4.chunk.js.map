{"version":3,"sources":["actions/actions.js","components/WeatherCard.js","components/Radio/Radio.js","components/Chart.js","App.js","reducers/WeatherReducer.js","store.js","reportWebVitals.js","index.js"],"names":["fetchF","dispatch","axios","get","then","weather","type","payload","data","unit","useStyles","makeStyles","root","minWidth","textAlign","bullet","display","margin","transform","title","fontSize","pos","marginBottom","OutlinedCard","status","date","temp","classes","useDispatch","Card","className","variant","CardContent","Typography","component","color","Date","toDateString","handleDate","Button","size","onClick","passDayData","RadioComponent","handleChange","selectedValue","RadioGroup","row","aria-label","name","defaultValue","FormControlLabel","value","control","Radio","checked","onChange","inputProps","label","VerticalBar","state","useSelector","labels","datasets","all","list","filter","day","dt","DayData","slice","map","item","main","backgroundColor","borderColor","borderWidth","Box","options","scales","yAxes","ticks","beginAtZero","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","App","useState","setSelectedValue","useEffect","event","target","days","dt_txt","split","Math","round","Chart","LinearProgress","userReducer","action","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d20cdfc4.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst fetchF = () => {\n  return (dispatch) => {\n    axios\n      .get(\n        \"https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=afeeafa25d3a3dae066200b885ac157b&cnt=40&units=metric\"\n      )\n      .then((weather) => {\n        dispatch({\n          type: \"FETCH\",\n          payload: weather.data,\n          unit: \"°C\",\n        })\n      })\n  }\n}\nconst fetchC = () => {\n  return (dispatch) => {\n    axios\n      .get(\n        \"https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=afeeafa25d3a3dae066200b885ac157b&cnt=40&units=imperial\"\n      )\n      .then((weather) => {\n        dispatch({\n          type: \"FETCH\",\n          payload: weather.data,\n          unit: \"°F\",\n        })\n      })\n  }\n}\nconst passDayData = (data, unit) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"PASS\",\n      payload: data,\n      unit: unit,\n    })\n  }\n}\nexport { fetchF, fetchC, passDayData }\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Typography, CardContent, Card, Button } from \"@material-ui/core\"\nimport { useDispatch } from \"react-redux\"\nimport { passDayData } from \"../actions/actions\"\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 120,\n    textAlign: \"center\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n})\n\nexport default function OutlinedCard({ status, date, temp, unit }) {\n  const classes = useStyles()\n  const handleDate = (date) => {\n    const event = new Date(date * 1000)\n    return event.toDateString()\n  }\n  const dispatch = useDispatch()\n  const pass = () => {\n    dispatch(passDayData(date, unit))\n  }\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\" color=\"secondary\">\n          {status}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {handleDate(date)}\n        </Typography>\n        <Typography variant=\"h4\">\n          {temp}\n          {unit}\n        </Typography>\n        <Button size=\"small\" onClick={pass} variant=\"outlined\" color=\"primary\">\n          More info\n        </Button>\n      </CardContent>\n    </Card>\n  )\n}\n","import React from \"react\"\nimport Radio from \"@material-ui/core/Radio\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\n\nexport default function RadioComponent({ handleChange, selectedValue }) {\n  return (\n    <RadioGroup\n      className=\"radio\"\n      row\n      aria-label=\"position\"\n      name=\"position\"\n      defaultValue=\"top\"\n    >\n      <FormControlLabel\n        value=\"C\"\n        control={\n          <Radio\n            checked={selectedValue === \"a\"}\n            onChange={handleChange}\n            value=\"a\"\n            name=\"radio-button-demo\"\n            inputProps={{ \"aria-label\": \"A\" }}\n          />\n        }\n        label=\"Celsius\"\n      />\n      <FormControlLabel\n        value=\"F\"\n        control={\n          <Radio\n            checked={selectedValue === \"b\"}\n            onChange={handleChange}\n            value=\"b\"\n            name=\"radio-button-demo\"\n            inputProps={{ \"aria-label\": \"B\" }}\n          />\n        }\n        label=\"Fahrenheit\"\n      />\n    </RadioGroup>\n  )\n}\n","import React from \"react\"\nimport { Typography, Box } from \"@material-ui/core\"\nimport { Bar } from \"react-chartjs-2\"\nimport { useSelector } from \"react-redux\"\n\nconst VerticalBar = () => {\n  const state = useSelector((state) => state)\n  const data = {\n    labels: [\n      \"00:00\",\n      \"03:00\",\n      \"06:00 \",\n      \"09:00\",\n      \"12:00\",\n      \"15:00\",\n      \"18:00\",\n      \"21:00\",\n    ],\n    datasets: [\n      {\n        label: `Temp of the day ${state.unit}`,\n        data: state.all.list\n          .filter((day) => day.dt >= state.DayData)\n          .slice(0, 8)\n          .map((item) => item.main.temp),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  }\n  const handleDate = (date) => {\n    const event = new Date(date * 1000)\n    return event.toDateString()\n  }\n  if (state.DayData) {\n    return (\n      <Box className=\"chart\">\n        <Typography className=\"title\">\n          Hourly forecast for {handleDate(state.DayData)}\n        </Typography>\n        <Bar data={data} options={options} />\n      </Box>\n    )\n  } else {\n    return (\n      <Box className=\"chartText\">\n        <Typography variant=\"h5\">\n          Click on MORE INFO button to view hourly forecast\n        </Typography>\n      </Box>\n    )\n  }\n}\n\nexport default VerticalBar\n","import React, { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Carousel from \"react-multi-carousel\"\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\nimport { Typography, Box } from \"@material-ui/core\"\nimport \"react-multi-carousel/lib/styles.css\"\nimport { fetchF, fetchC } from \"./actions/actions\"\nimport Weather from \"./components/WeatherCard\"\nimport Radio from \"./components/Radio/Radio\"\nimport Chart from \"./components/Chart\"\n\nconst responsive = {\n  superLargeDesktop: {\n    breakpoint: { max: 4000, min: 3000 },\n    items: 3,\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 3,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 3,\n  },\n}\n\nexport default function App() {\n  const state = useSelector((state) => state)\n  const dispatch = useDispatch()\n\n  const [selectedValue, setSelectedValue] = useState(\"b\")\n\n  const handleChange = (event) => {\n    setSelectedValue(event.target.value)\n  }\n\n  useEffect(() => {\n    switch (selectedValue) {\n      case \"b\":\n        dispatch(fetchC())\n        break\n      case \"a\":\n        dispatch(fetchF())\n        break\n      default:\n        dispatch(fetchF())\n        break\n    }\n  }, [selectedValue, dispatch])\n\n  return (\n    <>\n      {!state ? (\n        <Box className=\"loading\">\n          <Typography variant=\"h3\">\n            Loading...\n            <LinearProgress color=\"secondary\" />\n          </Typography>\n        </Box>\n      ) : (\n        <>\n          <Radio selectedValue={selectedValue} handleChange={handleChange} />\n          <Carousel className=\"table\" responsive={responsive}>\n            {state.days.map((data) =>\n              data.dt_txt.split(\" \")[1] === \"00:00:00\" ? (\n                <Box key={data.dt} className=\"weather\">\n                  <Weather\n                    date={data.dt}\n                    status={data.weather[0].main}\n                    temp={Math.round(data.main.temp)}\n                    unit={state.unit}\n                  />\n                </Box>\n              ) : null\n            )}\n          </Carousel>\n          <Chart />\n        </>\n      )}\n    </>\n  )\n}\n","const userReducer = (state = { all: [], days: [] }, action) => {\n  switch (action.type) {\n    case \"FETCH\":\n      return {\n        all: action.payload,\n        days: action.payload.list.filter(\n          (data) => data.dt_txt.split(\" \")[1] === \"00:00:00\"\n        ),\n        unit: action.unit,\n      }\n    case \"PASS\":\n      return {\n        ...state,\n        DayData: action.payload,\n        unit: action.unit,\n      }\n    // no default\n  }\n}\n\nexport default userReducer\n","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport userReducer from \"./reducers/WeatherReducer\"\n\nconst initialState = []\n\nconst store = createStore(userReducer, initialState, applyMiddleware(thunk))\n\nexport default store\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport store from \"./store\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\nreportWebVitals()\n"],"sourceRoot":""}